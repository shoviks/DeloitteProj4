package model;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 10 12:19:51 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PsFDErrorsImpl
  extends EntityImpl
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum
  {
    ErrorId,
    ProjId,
    SNo,
    ErrorCode,
    ErrorType,
    Description,
    Handler,
    PsFDProjects;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int ERRORID = AttributesEnum.ErrorId.index();
  public static final int PROJID = AttributesEnum.ProjId.index();
  public static final int SNO = AttributesEnum.SNo.index();
  public static final int ERRORCODE = AttributesEnum.ErrorCode.index();
  public static final int ERRORTYPE = AttributesEnum.ErrorType.index();
  public static final int DESCRIPTION = AttributesEnum.Description.index();
  public static final int HANDLER = AttributesEnum.Handler.index();
  public static final int PSFDPROJECTS = AttributesEnum.PsFDProjects.index();

  /**
   * This is the default constructor (do not remove).
   */
  public PsFDErrorsImpl()
  {
  }

  /**
   * Gets the attribute value for ErrorId, using the alias name ErrorId.
   * @return the value of ErrorId
   */
  public Number getErrorId()
  {
    return (Number) getAttributeInternal(ERRORID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ErrorId.
   * @param value value to set the ErrorId
   */
  public void setErrorId(Number value)
  {
    setAttributeInternal(ERRORID, value);
  }

  /**
   * Gets the attribute value for ProjId, using the alias name ProjId.
   * @return the value of ProjId
   */
  public Integer getProjId()
  {
    return (Integer) getAttributeInternal(PROJID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ProjId.
   * @param value value to set the ProjId
   */
  public void setProjId(Integer value)
  {
    setAttributeInternal(PROJID, value);
  }

  /**
   * Gets the attribute value for SNo, using the alias name SNo.
   * @return the value of SNo
   */
  public String getSNo()
  {
    return (String) getAttributeInternal(SNO);
  }

  /**
   * Sets <code>value</code> as the attribute value for SNo.
   * @param value value to set the SNo
   */
  public void setSNo(String value)
  {
    setAttributeInternal(SNO, value);
  }

  /**
   * Gets the attribute value for ErrorCode, using the alias name ErrorCode.
   * @return the value of ErrorCode
   */
  public String getErrorCode()
  {
    return (String) getAttributeInternal(ERRORCODE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ErrorCode.
   * @param value value to set the ErrorCode
   */
  public void setErrorCode(String value)
  {
    setAttributeInternal(ERRORCODE, value);
  }

  /**
   * Gets the attribute value for ErrorType, using the alias name ErrorType.
   * @return the value of ErrorType
   */
  public String getErrorType()
  {
    return (String) getAttributeInternal(ERRORTYPE);
  }

  /**
   * Sets <code>value</code> as the attribute value for ErrorType.
   * @param value value to set the ErrorType
   */
  public void setErrorType(String value)
  {
    setAttributeInternal(ERRORTYPE, value);
  }

  /**
   * Gets the attribute value for Description, using the alias name Description.
   * @return the value of Description
   */
  public String getDescription()
  {
    return (String) getAttributeInternal(DESCRIPTION);
  }

  /**
   * Sets <code>value</code> as the attribute value for Description.
   * @param value value to set the Description
   */
  public void setDescription(String value)
  {
    setAttributeInternal(DESCRIPTION, value);
  }

  /**
   * Gets the attribute value for Handler, using the alias name Handler.
   * @return the value of Handler
   */
  public String getHandler()
  {
    return (String) getAttributeInternal(HANDLER);
  }

  /**
   * Sets <code>value</code> as the attribute value for Handler.
   * @param value value to set the Handler
   */
  public void setHandler(String value)
  {
    setAttributeInternal(HANDLER, value);
  }

  /**
   * @return the associated entity PsFDProjectsImpl.
   */
  public PsFDProjectsImpl getPsFDProjects()
  {
    return (PsFDProjectsImpl) getAttributeInternal(PSFDPROJECTS);
  }

  /**
   * Sets <code>value</code> as the associated entity PsFDProjectsImpl.
   */
  public void setPsFDProjects(PsFDProjectsImpl value)
  {
    setAttributeInternal(PSFDPROJECTS, value);
  }

  /**
   * @param errorId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number errorId)
  {
    return new Key(new Object[] { errorId });
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    return EntityDefImpl.findDefObject("model.PsFDErrors");
  }

  /**
   * Add attribute defaulting logic in this method.
   * @param attributeList list of attribute names/values to initialize the row
   */
  protected void create(AttributeList attributeList)
  {
    super.create(attributeList);
    setErrorId(getNextSequenceVal("ERROR_ID_SEQ"));
  }
  protected Number getNextSequenceVal(String sequenceName)
  {
    SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
    return s.getSequenceNumber();
  }
}

