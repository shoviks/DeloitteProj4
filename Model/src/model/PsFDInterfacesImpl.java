package model;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 10 12:15:20 EST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PsFDInterfacesImpl
  extends EntityImpl
{
  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  public enum AttributesEnum
  {
    InterfaceId,
    ProjId,
    InterfaceName,
    InterfaceShortDescr,
    Direction,
    DataCategory,
    InterfaceType,
    BusinessPriority,
    Frequency,
    FromSystem,
    AddComments,
    PsFDProjects;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    public int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    public static final int firstIndex()
    {
      return firstIndex;
    }

    public static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    public static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }
  public static final int INTERFACEID = AttributesEnum.InterfaceId.index();
  public static final int PROJID = AttributesEnum.ProjId.index();
  public static final int INTERFACENAME = AttributesEnum.InterfaceName.index();
  public static final int INTERFACESHORTDESCR = AttributesEnum.InterfaceShortDescr.index();
  public static final int DIRECTION = AttributesEnum.Direction.index();
  public static final int DATACATEGORY = AttributesEnum.DataCategory.index();
  public static final int INTERFACETYPE = AttributesEnum.InterfaceType.index();
  public static final int BUSINESSPRIORITY = AttributesEnum.BusinessPriority.index();
  public static final int FREQUENCY = AttributesEnum.Frequency.index();
  public static final int FROMSYSTEM = AttributesEnum.FromSystem.index();
  public static final int ADDCOMMENTS = AttributesEnum.AddComments.index();
  public static final int PSFDPROJECTS = AttributesEnum.PsFDProjects.index();

  /**
   * This is the default constructor (do not remove).
   */
  public PsFDInterfacesImpl()
  {
  }

  /**
   * Gets the attribute value for InterfaceId, using the alias name InterfaceId.
   * @return the value of InterfaceId
   */
  public Number getInterfaceId()
  {
    return (Number) getAttributeInternal(INTERFACEID);
  }

  /**
   * Sets <code>value</code> as the attribute value for InterfaceId.
   * @param value value to set the InterfaceId
   */
  public void setInterfaceId(Number value)
  {
    setAttributeInternal(INTERFACEID, value);
  }

  /**
   * Gets the attribute value for ProjId, using the alias name ProjId.
   * @return the value of ProjId
   */
  public Integer getProjId()
  {
    return (Integer) getAttributeInternal(PROJID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ProjId.
   * @param value value to set the ProjId
   */
  public void setProjId(Integer value)
  {
    setAttributeInternal(PROJID, value);
  }

  /**
   * Gets the attribute value for InterfaceName, using the alias name InterfaceName.
   * @return the value of InterfaceName
   */
  public String getInterfaceName()
  {
    return (String) getAttributeInternal(INTERFACENAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for InterfaceName.
   * @param value value to set the InterfaceName
   */
  public void setInterfaceName(String value)
  {
    setAttributeInternal(INTERFACENAME, value);
  }

  /**
   * Gets the attribute value for InterfaceShortDescr, using the alias name InterfaceShortDescr.
   * @return the value of InterfaceShortDescr
   */
  public String getInterfaceShortDescr()
  {
    return (String) getAttributeInternal(INTERFACESHORTDESCR);
  }

  /**
   * Sets <code>value</code> as the attribute value for InterfaceShortDescr.
   * @param value value to set the InterfaceShortDescr
   */
  public void setInterfaceShortDescr(String value)
  {
    setAttributeInternal(INTERFACESHORTDESCR, value);
  }

  /**
   * Gets the attribute value for Direction, using the alias name Direction.
   * @return the value of Direction
   */
  public String getDirection()
  {
    return (String) getAttributeInternal(DIRECTION);
  }

  /**
   * Sets <code>value</code> as the attribute value for Direction.
   * @param value value to set the Direction
   */
  public void setDirection(String value)
  {
    setAttributeInternal(DIRECTION, value);
  }

  /**
   * Gets the attribute value for DataCategory, using the alias name DataCategory.
   * @return the value of DataCategory
   */
  public String getDataCategory()
  {
    return (String) getAttributeInternal(DATACATEGORY);
  }

  /**
   * Sets <code>value</code> as the attribute value for DataCategory.
   * @param value value to set the DataCategory
   */
  public void setDataCategory(String value)
  {
    setAttributeInternal(DATACATEGORY, value);
  }

  /**
   * Gets the attribute value for InterfaceType, using the alias name InterfaceType.
   * @return the value of InterfaceType
   */
  public String getInterfaceType()
  {
    return (String) getAttributeInternal(INTERFACETYPE);
  }

  /**
   * Sets <code>value</code> as the attribute value for InterfaceType.
   * @param value value to set the InterfaceType
   */
  public void setInterfaceType(String value)
  {
    setAttributeInternal(INTERFACETYPE, value);
  }

  /**
   * Gets the attribute value for BusinessPriority, using the alias name BusinessPriority.
   * @return the value of BusinessPriority
   */
  public String getBusinessPriority()
  {
    return (String) getAttributeInternal(BUSINESSPRIORITY);
  }

  /**
   * Sets <code>value</code> as the attribute value for BusinessPriority.
   * @param value value to set the BusinessPriority
   */
  public void setBusinessPriority(String value)
  {
    setAttributeInternal(BUSINESSPRIORITY, value);
  }

  /**
   * Gets the attribute value for Frequency, using the alias name Frequency.
   * @return the value of Frequency
   */
  public String getFrequency()
  {
    return (String) getAttributeInternal(FREQUENCY);
  }

  /**
   * Sets <code>value</code> as the attribute value for Frequency.
   * @param value value to set the Frequency
   */
  public void setFrequency(String value)
  {
    setAttributeInternal(FREQUENCY, value);
  }

  /**
   * Gets the attribute value for FromSystem, using the alias name FromSystem.
   * @return the value of FromSystem
   */
  public String getFromSystem()
  {
    return (String) getAttributeInternal(FROMSYSTEM);
  }

  /**
   * Sets <code>value</code> as the attribute value for FromSystem.
   * @param value value to set the FromSystem
   */
  public void setFromSystem(String value)
  {
    setAttributeInternal(FROMSYSTEM, value);
  }

  /**
   * Gets the attribute value for AddComments, using the alias name AddComments.
   * @return the value of AddComments
   */
  public String getAddComments()
  {
    return (String) getAttributeInternal(ADDCOMMENTS);
  }

  /**
   * Sets <code>value</code> as the attribute value for AddComments.
   * @param value value to set the AddComments
   */
  public void setAddComments(String value)
  {
    setAttributeInternal(ADDCOMMENTS, value);
  }

  /**
   * @return the associated entity PsFDProjectsImpl.
   */
  public PsFDProjectsImpl getPsFDProjects()
  {
    return (PsFDProjectsImpl) getAttributeInternal(PSFDPROJECTS);
  }

  /**
   * Sets <code>value</code> as the associated entity PsFDProjectsImpl.
   */
  public void setPsFDProjects(PsFDProjectsImpl value)
  {
    setAttributeInternal(PSFDPROJECTS, value);
  }

  /**
   * @param interfaceId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Number interfaceId)
  {
    return new Key(new Object[] { interfaceId });
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    return EntityDefImpl.findDefObject("model.PsFDInterfaces");
  }

  /**
   * Add attribute defaulting logic in this method.
   * @param attributeList list of attribute names/values to initialize the row
   */
  protected void create(AttributeList attributeList)
  {
    super.create(attributeList);
    setInterfaceId(getNextSequenceVal("INTERFACE_ID_SEQ"));
  }
  protected Number getNextSequenceVal(String sequenceName)
  {
    SequenceImpl s = new SequenceImpl(sequenceName, getDBTransaction());
    return s.getSequenceNumber();
  }
}

